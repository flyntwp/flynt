$color-gray: #333;
$color-white: #fff;
$background-opacity: 0.5;
$border-width: 3px;
$transition-time: 0.3s;
$transition-easing: ease;

$play-button-circle-diameter: (
  'desktop': 100px,
  'mobile': 60px
);

$play-button-triangle-size: (
  'desktop': 40px,
  'mobile': 20px
);

@mixin pseudo-element-defaults() {
  content: '';
  left: 50%;
  position: absolute;
  top: 50%;
  transition: transform $transition-time $transition-easing;
}

@mixin play-button($color-play-button, $background-opacity, $border-width, $colorBorder, $play-button-circle-diameter, $color-triangle, $play-button-triangle-size) {
  &::before {
    @include pseudo-element-defaults();
    background-color: rgba($color-play-button, $background-opacity);
    border: $border-width solid $colorBorder;
    border-radius: 50%;
    height: map-get($play-button-circle-diameter, 'mobile');
    margin-left: -(map-get($play-button-circle-diameter, 'mobile') / 2);
    margin-top: -(map-get($play-button-circle-diameter, 'mobile') / 2);
    width: map-get($play-button-circle-diameter, 'mobile');

    @media (min-width: $breakpoint-tablet) {
      height: map-get($play-button-circle-diameter, 'desktop');
      margin-left: -(map-get($play-button-circle-diameter, 'desktop') / 2);
      margin-top: -(map-get($play-button-circle-diameter, 'desktop') / 2);
      width: map-get($play-button-circle-diameter, 'desktop');
    }
  }

  &::after {
    @include pseudo-element-defaults();
    border-bottom: (map-get($play-button-triangle-size, 'mobile') / 2) solid transparent;
    border-left: map-get($play-button-triangle-size, 'mobile') solid $color-triangle;
    border-top: (map-get($play-button-triangle-size, 'mobile') / 2) solid transparent;
    height: 0;
    margin-left: -(map-get($play-button-triangle-size, 'mobile') / 2 * 0.9);
    margin-top: -(map-get($play-button-triangle-size, 'mobile') / 2);
    width: 0;

    @media (min-width: $breakpoint-tablet) {
      border-bottom: (map-get($play-button-triangle-size, 'desktop') / 2) solid transparent;
      border-left: map-get($play-button-triangle-size, 'desktop') solid $color-triangle;
      border-top: (map-get($play-button-triangle-size, 'desktop') / 2) solid transparent;
      margin-left: -(map-get($play-button-triangle-size, 'desktop') / 2 * 0.9);
      margin-top: -(map-get($play-button-triangle-size, 'desktop') / 2);
    }
  }

  &:hover {
    &::before,
    &::after {
      transform: scale(1.1);
    }
  }
}

.video-playButton {
  @include play-button($color-gray, $background-opacity, $border-width, $color-white, $play-button-circle-diameter, $color-white, $play-button-triangle-size);
  cursor: pointer;
  display: block;
  height: 100%;
  left: 0;
  outline: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 2;
}

&.flyntComponent--sizeSmall {
  $play-button-small-circle-diameter: (
    'desktop': 60px,
    'mobile': 40px
  );

  $play-button-small-triangle-size: (
    'desktop': 20px,
    'mobile': 10px
  );

  .video-playButton {
    @include play-button(
      $color-gray,
      $background-opacity,
      $border-width,
      $color-white,
      $play-button-small-circle-diameter,
      $color-white,
      $play-button-small-triangle-size
    );
  }
}
