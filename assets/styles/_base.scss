/**
* 0.0 Root
*
* Top level styles every element should inherit.
*/

// FOUC can be reduced with good matching fallback font: https://meowni.ca/font-style-matcher/
@include font-face('Montserrat', 'montserrat-v24-latin-regular', '400', 'normal');
@include font-face('Montserrat', 'montserrat-v24-latin-italic', '400', 'italic');
@include font-face('Montserrat', 'montserrat-v24-latin-700', '700', 'normal');
@include font-face('Montserrat', 'montserrat-v24-latin-700italic', '700', 'italic');

html {
  background-color: var(--color-background);
  box-sizing: border-box;
  color: var(--color-text);
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  line-height: 1.7;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-wrap: break-word;
  word-wrap: break-word;

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

body {
  font-family: 'Montserrat', Verdana, sans-serif;
  height: 100%;
  overflow-x: hidden;
}

/*
 * Respect reduced motion preferences and remove
 * all animations, transitions and smooth scroll.
*/
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
  }
}

/**
* 1.0 Typography
*
* Styling all likely used content flow elements.
*/

#{$heading-selectors} {
  color: var(--color-headline);
  font-weight: 700;
  line-height: calc(1em + 0.5rem);
  margin-bottom: 0.5rem;
  margin-top: 1.5rem;

  a,
  a:hover,
  a:focus {
    color: var(--color-headline);
    text-decoration: none;
  }

  > em {
    color: var(--color-accent);
    font-style: normal;
  }
}

h1,
.h1 {
  font-size: 2.25rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.75rem;
  }
}

h2,
.h2 {
  font-size: 1.5rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.5rem;
  }
}

h3,
.h3 {
  font-size: 1.125rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.25rem;
  }
}

h4,
.h4 {
  font-size: 1rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.125rem;
  }
}

h5,
.h5 {
  font-size: 1.125rem;
  font-weight: 400;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.25rem;
  }
}

h6,
.h6 {
  font-size: 1rem;
}

a {
  color: var(--color-accent);
  text-decoration-color: var(--color-accent-alpha);
  transition: color 0.2s $ease-in-out-circ, text-decoration-color 0.2s $ease-in-out-circ;

  &:hover,
  &:focus {
    color: var(--color-accent-hover);
    text-decoration-color: var(--color-accent);
  }

  &:focus {
    outline-color: var(--color-accent-alpha);
  }
}

p,
.paragraph,
pre {
  margin: 0 0 1.5rem;
}

hr {
  background-color: var(--color-border-alpha);
  border: 0;
  display: block;
  height: var(--border-width);
  margin: 3rem 0;
}

img {
  display: block;
  height: auto;
  max-width: 100%;
  width: 100%;
}

figure {
  margin: 0;

  + :not(div) {
    margin-top: 1.5rem;
  }
}

figcaption {
  font-size: 0.9rem;
  margin: 0.5rem auto 0 0;
  max-width: var(--content-max-width);
}

code,
kbd,
pre,
samp {
  background-color: var(--color-border-alpha);
  border-radius: 4px;
  display: inline-block;
  font-size: 0.95rem;
  padding: 0 0.375rem;
  word-break: break-word;
}

pre {
  border-radius: 8px;
  padding: 1.25rem 1.5rem;

  code {
    background: transparent;
    padding: 0;
  }
}

blockquote,
.blockquote {
  color: var(--color-accent);
  font-size: 1.5rem;
  font-weight: 700;
  line-height: calc(1em + 0.5rem);
  margin: 3rem 0;
  padding-left: 2.5rem;
  position: relative;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.75rem;
    padding-left: 3.75rem;
  }

  &::before {
    content: '\201c'; // Unicode escaped LEFT DOUBLE QUOTATION MARK
    font-family: Helvetica, Arial, sans-serif;
    font-size: 2.5rem;
    left: 0;
    line-height: 1;
    position: absolute;
    top: 0.25rem;

    @media (min-width: $breakpoint-mobile-horizontal) {
      font-size: 6rem;
      top: -2px;
    }
  }

  p:last-child {
    margin-bottom: 0;
  }
}

/**
* 1.1 Lists & Tables
*
* Default and custom styled list and table elements.
*/

ul,
ol {
  margin: 1.5rem 0;
  padding-left: 1.5rem;

  li {
    margin-bottom: 0.25rem;
  }

  ul,
  ol {
    margin-bottom: 0;
    margin-top: 0.25rem;
    padding-left: 2rem;
  }
}

ul {
  > li {
    &::marker {
      font-size: 1.25rem;
    }
  }
}

table {
  border-spacing: 0;
  box-shadow: inset 0 0 0 var(--border-width) var(--color-border);
  margin: 0 auto;
  max-width: 100%;
  text-align: left;
  width: 100%;

  + p,
  + table,
  + figure {
    margin-top: 1.5rem;
  }
}

td,
th {
  padding: 0.9375rem 1.5rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    border-bottom: solid var(--border-width) var(--color-border);
    padding: 1.25rem 1.5rem;
    vertical-align: middle;
    white-space: nowrap;
  }
}

tr:nth-child(even) {
  background-color: var(--color-border-alpha);
}

/**
* 1.2 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;

  &:focus {
    outline-color: var(--color-accent-alpha);
  }
}

.button {
  @include reset-link;
  appearance: none;
  background-color: var(--color-accent);
  border: var(--border-width) solid var(--color-accent);
  border-radius: var(--button-border-radius);
  color: var(--color-background);
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-weight: 700;
  line-height: 1.7;
  outline: none;
  padding: 0.618rem 1.618rem;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease;
  user-select: none;

  &:disabled,
  &--disabled {
    cursor: default;
    opacity: var(--opacity-grayed-out);
    pointer-events: none;
  }

  &:hover {
    background-color: var(--color-accent-hover);
    border-color: var(--color-accent-hover);
    color: var(--color-button-text-hover);
  }

  &:focus {
    box-shadow: 0 1px var(--border-width) rgba(0, 0, 0, 0.25), 0 0 0 3px var(--color-accent-alpha);
    color: var(--color-background);
  }

  &:active {
    box-shadow: none;
  }

  + .button {
    margin-top: 0.5rem;
  }

  &--ghost {
    background-color: transparent;
    border-color: var(--color-accent);
    color: var(--color-accent);

    &:focus {
      background-color: transparent;
      box-shadow: 0 1px var(--border-width) rgba(0, 0, 0, 0.25), 0 0 0 3px var(--color-accent-alpha);
      color: var(--color-accent);
    }

    &:hover {
      background-color: var(--color-accent-hover);
      color: var(--color-background);
    }

    &:active {
      background-color: var(--color-accent);
      border-color: var(--color-accent);
      box-shadow: none;
      color: var(--color-background);
    }
  }

  &--small {
    font-size: 0.95rem;
    padding: 0.309rem 1.618rem;
  }

  &--link {
    background-color: transparent;
    border: 0;
    border-radius: 0;
    color: var(--color-accent);
    display: inline-block;
    line-height: 1.7;
    padding: 0;
    position: relative;
    text-decoration: none;
    text-transform: none;
    transition: color 0.2s ease;

    &:hover,
    &:focus {
      background-color: transparent;
      box-shadow: none;
      color: var(--color-accent-hover);
    }

    &:hover {
      &::before {
        transform: scaleX(1);
        transform-origin: bottom left;
      }
    }

    &::before {
      background-color: var(--color-accent-hover);
      bottom: 0;
      content: '';
      height: var(--border-width);
      left: 0;
      position: absolute;
      transform: scaleX(0);
      transform-origin: bottom right;
      transition: transform 0.2s $ease-in-out-circ;
      width: 100%;
    }

    &::after {
      border-right: var(--border-width) solid currentColor;
      border-top: var(--border-width) solid currentColor;
      content: '';
      display: inline-block;
      height: 0.5rem;
      margin-bottom: 0.0625rem;
      margin-left: 0.25rem;
      transform: rotate(45deg);
      vertical-align: baseline;
      width: 0.5rem;
    }
  }
}

/**
* 1.3 Forms
*
* Global form elements, including structuring wrapper elements.
*/

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 0 0 1.5rem;
  padding: 0;

  *:last-child {
    margin-bottom: 0;
  }

  input,
  select,
  textarea {
    margin: 0 0 2rem;
  }
}

legend {
  display: inline-block;
  font-size: 1.125rem;
  margin-bottom: 1rem;
}

label {
  display: inline-block;
  font-size: 1rem;
  font-weight: 700;
  line-height: 1.4;
  margin-bottom: 0.5rem;
}

#{$input-selectors} {
  appearance: none;
  background-color: transparent;
  border: var(--border-width) solid var(--color-border);
  border-radius: var(--box-border-radius);
  color: var(--color-headline);
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.25;
  min-height: 3.5rem;
  outline: none;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;

  &::placeholder {
    color: var(--color-text);
    opacity: var(--opacity-grayed-out);
  }

  &:focus {
    box-shadow: 0 0 0 3px var(--color-accent-alpha);
  }

  &:disabled {
    background-color: var(--color-border-alpha);
    border-color: var(--color-border);
    color: var(--color-border);
    opacity: var(--opacity-grayed-out);
  }
}

.input-validation-error {
  border-color: var(--color-error);
}

input,
select,
textarea {
  margin: 0 0 1rem;
  padding: 0.309rem 0.927rem;
}

textarea {
  line-height: 1.7;
  min-height: 150px;
  padding: 0.927rem;
  resize: vertical;
  vertical-align: top;
  width: 100%;
}

select {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='%23414751' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 18px) center;
  background-repeat: no-repeat;
  background-size: 9px;
  line-height: 1.7;
  padding-right: 45px;

  &::-ms-expand {
    display: none;
  }
}

.select {
  display: inline-block;
  position: relative;
  vertical-align: top;

  &::after {
    border-bottom: var(--border-width) solid var(--color-headline);
    border-left: var(--border-width) solid var(--color-headline);
    content: '';
    height: 8px;
    position: absolute;
    right: 20px;
    top: calc(50% - 6px);
    transform: rotate(-45deg);
    width: 8px;
    z-index: 1;
  }

  select {
    // don't change background image, if you need to change it - use wrapper .select
    background-image: none;
    margin: 0;
    position: relative;
    z-index: 2;

    option {
      color: #000;
    }
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 1px;

  &,
  &:hover {
    border-color: var(--color-border);
    outline: 0;
  }

  + label {
    cursor: pointer;
    display: inline-block;
    font-weight: 400;
    letter-spacing: 0;
    line-height: 1.7;
    padding-left: 2em;
    position: relative;

    &::before {
      background: transparent;
      border: var(--border-width) solid var(--color-border);
      border-radius: 0.25rem;
      content: '';
      display: block;
      height: 1.25em;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: 0.2em;
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
      width: 1.25em;
    }

    &::after {
      border-bottom: var(--border-width) solid var(--color-accent);
      border-right: var(--border-width) solid var(--color-accent);
      content: '';
      display: block;
      height: 0.75em;
      left: 0.4375em;
      opacity: 0;
      position: absolute;
      top: 0.3125em;
      transform: rotate(45deg);
      transition: opacity 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
      visibility: hidden;
      width: 0.375em;
    }
  }

  &:focus {
    + label {
      &::before {
        border-color: var(--color-accent);
        box-shadow: 0 0 0 3px var(--color-accent-alpha);
      }
    }
  }

  &:checked {
    + label {
      &::before {
        background-color: var(--color-accent);
        border-color: var(--color-accent);
      }

      &::after {
        border-color: var(--color-background);
        opacity: 1;
        visibility: visible;
      }
    }
  }
}

[type='radio'] {
  + label {
    &::before {
      border-radius: 50%;
    }

    &::after {
      background-color: var(--color-accent);
      border: 0;
      border-radius: 50%;
      height: 0.75em;
      left: 0.25em;
      top: 0.4375em;
      transform: none;
      width: 0.75em;
    }
  }

  &:checked {
    + label {
      &::before {
        background-color: var(--color-background);
      }
    }
  }
}

.oneInputForm {
  background-color: var(--color-background);
  border: var(--border-width) solid var(--color-border);
  border-radius: calc(var(--box-border-radius) + (var(--border-width) * 2));
  margin: 0 0 2em;
  padding: calc(var(--border-width) * 2);
  position: relative;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  width: 100%;

  @media (min-width: $breakpoint-mobile-horizontal) {
    align-items: center;
    border-radius: calc(var(--button-border-radius) + (var(--border-width) * 2));
    display: flex;

    &:focus-within {
      border-color: var(--color-accent);
      box-shadow: 0 0 0 3px var(--color-accent-alpha);
    }
  }

  &-input {
    background-color: transparent;
    border: 0;
    margin: 0;
    padding: 0 0.618em;
    width: 100%;

    @media (min-width: $breakpoint-mobile-horizontal) {
      border-radius: var(--button-border-radius);
      min-height: inherit;
      padding: 0 1.618em;
    }

    &:focus {
      box-shadow: none;
    }
  }

  &-button {
    width: 100%;

    @media (min-width: $breakpoint-mobile-horizontal) {
      box-shadow: none;
      flex-shrink: 0;
      width: auto;
    }

    &:focus {
      box-shadow: none;
    }
  }
}

/**
* 2.0 Helpers
*
* Global layout classes for a consistent appearance.
*/

.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;

  .admin-bar & {
    padding-top: var(--wp-admin--admin-bar--height);
  }
}

.mainContent {
  flex: 1 0 auto;
}

.flyntComponent {
  position: relative;
}

.componentSpacing {
  margin: var(--component-spacing) 0;

  &[data-theme] {
    margin: 0;
    padding: var(--component-spacing) 0;
  }

  // Reduce componentSpacing top on desktop for the first component in mainContent.
  .mainContent > & {
    &:first-child {
      @media (min-width: $breakpoint-tablet) {
        margin-top: var(--component-spacing-tablet);
      }

      &[data-theme] {
        @media (min-width: $breakpoint-tablet) {
          margin: 0;
          padding-top: var(--component-spacing-tablet);
        }
      }
    }
  }

  // Reduce componentSpacing for all components in single post layouts.
  .post-main & {
    --component-spacing: calc(var(--component-spacing-mobile) / 2);

    @media (min-width: $breakpoint-tablet) {
      --component-spacing: calc(var(--component-spacing-tablet) / 2);
    }

    @media (min-width: $breakpoint-desktop) {
      --component-spacing: calc(var(--component-spacing-desktop) / 2);
    }
  }
}

.centerMaxWidthContainer {
  @include center;
}

.centerContentMaxWidth {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--content-max-width);
}

.centerContentMaxWidthLarge {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--content-max-width-large);
}

.preContent {
  @include reset-content-margins;
  margin: 0 auto calc(var(--component-spacing) / 2);
  max-width: var(--content-max-width);
  text-align: center;
}

.postContent {
  @include reset-content-margins;
  margin: calc(var(--component-spacing) / 2) auto 0;
  max-width: var(--content-max-width);
  text-align: center;
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

/* Class for text that should only be visible to screen readers */
.visuallyHidden {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px !important;
  overflow: hidden;
  position: absolute !important;
  white-space: nowrap;
  width: 1px !important;
}

/* Skip link behavior */
.skipLink {
  position: fixed;
  top: -100px;
  z-index: 999;

  &:focus {
    top: 0;
  }
}

/**
* 2.1 Box Helpers
*/

.boxPadding {
  @include reset-content-margins;
  padding: var(--box-padding);
}

.boxRadius {
  border-radius: var(--box-border-radius);
  overflow: hidden;
  z-index: 1;
}

.boxShadow {
  box-shadow: 0 5px 35px calc(-1 * var(--border-width)) rgba(0, 0, 0, 0.08);
}

/**
* 3.0 Themes
*
* Color themes for backgrounds and content elements.
*/

[data-theme] {
  background-color: var(--color-background);
  color: var(--color-text);
}
