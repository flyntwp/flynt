/**
* 1.0 Root
*
* Top level styles every element should inherit.
*/

html {
  background-color: $color-background;
  box-sizing: border-box;
  color: $color-text;
  font-family: 'Montserrat', Helvetica, Arial, sans-serif;
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  line-height: 1.625;
  overflow-wrap: break-word;
  word-wrap: break-word;

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

/**
* 2.0 Layout
*
* Overall page layout.
*/

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
}

body {
  overflow-x: hidden;
}

.themeDefault {
  background-color: $color-background;
}

.themeDark {
  background-color: $color-background-dark;

  &,
  #{$heading-selectors} {
    color: $color-background;
  }

  .button {
    &:not(.button--primary):not(.button--secondary):not(.button--link) {
      background: $color-background-dark;

      &:hover,
      &:focus {
        border-color: $color-background-hero;
        color: $color-background-hero;
      }
    }

    &--primary {
      &:hover,
      &:focus {
        background: $color-background-hero;
        border-color: $color-background-hero;
      }
    }

    &--secondary {
      background: $color-background-hero;
      border-color: $color-background-hero;
    }

    &--link {
      &:hover,
      &:focus {
        color: $color-background;

        &::before {
          background: $color-background;
        }
      }

      &::after {
        $color-accent-rgb: red($color-accent), green($color-accent), blue($color-accent);
        $color-background-rgb: red($color-background), green($color-background), blue($color-background);

        background: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-accent-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-rgb}'/%3E%3C/svg%3E") left center no-repeat;
      }
    }
  }
}

.themeLight {
  background-color: $color-background-light;

  .button {
    &:not(.button--primary):not(.button--secondary):not(.button--link) {
      background: $color-background-light;
    }
  }
}

.themeHero {
  background-color: $color-background-hero;

  &,
  #{$heading-selectors},
  a,
  .feather {
    color: $color-background;
  }

  @media (min-width: $breakpoint-tablet) {
    a:hover,
    a:focus {
      color: $color-background-dark;
    }
  }

  .button {
    &:not(.button--primary):not(.button--secondary):not(.button--link) {
      background: $color-background-hero;
      border-color: $color-background;
      color: $color-background;

      &:hover,
      &:focus {
        border-color: $color-background-dark;
        color: $color-background-dark;
      }
    }

    &--primary {
      background: $color-background;
      border-color: $color-background;
      color: $color-background-dark;

      &:hover,
      &:focus {
        background: $color-background-dark;
        border-color: $color-background-dark;
        color: $color-background;
      }
    }

    &--secondary {
      background: $color-background-dark;
      border-color: $color-background-dark;

      &:hover,
      &:focus {
        background: $color-background;
        border-color: $color-background;
        color: $color-background-dark;
      }
    }

    &--link {
      color: $color-background;

      &::before {
        background: $color-background;
      }

      &:hover,
      &:focus {
        color: $color-background-dark;

        &::before {
          background: $color-background-dark;
        }
      }

      &::after {
        $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);
        $color-background-rgb: red($color-background), green($color-background), blue($color-background);

        background: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-background-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-dark-rgb}'/%3E%3C/svg%3E") left center no-repeat;
      }
    }
  }
}

.flyntComponent {
  position: relative;
}

.mainContent {
  > .flyntComponent {
    margin: $component-spacing-mobile 0;

    @media (min-width: $breakpoint-tablet) {
      margin: $component-spacing-tablet 0;
    }

    @media (min-width: $breakpoint-desktop) {
      margin: $component-spacing-desktop 0;
    }

    &[class*='theme'] {
      margin: 0;
      padding: $component-spacing-mobile 0;

      @media (min-width: $breakpoint-tablet) {
        padding: $component-spacing-tablet 0;
      }

      @media (min-width: $breakpoint-desktop) {
        padding: $component-spacing-desktop 0;
      }
    }
  }
}

.centerMaxWidthContainer {
  @include center;

  @media (min-width: $breakpoint-tablet) {
    @include center($padding: $container-padding-tablet);
  }

  @media (min-width: $breakpoint-desktop) {
    @include center($padding: $container-padding-desktop);
  }
}

.centerContentMaxWidth {
  margin: 0 auto;
  max-width: $content-max-width;
}

.boxPadding {
  @include reset-content-margins;

  padding: 20px;

  @media (min-width: $breakpoint-tablet-horizontal) {
    padding: 30px;
  }
}

.boxShadow {
  box-shadow: 0 1px 26px 0 rgba(0, 0, 0, 0.06);
}

.preContent {
  @include reset-content-margins;

  margin: 0 auto 32px;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-bottom: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-bottom: $container-padding-desktop;
  }
}

.postContent {
  @include reset-content-margins;

  margin: 32px auto 0;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-top: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-top: $container-padding-desktop;
  }
}

/**
* 3.0 Base Style
*
* Styling all likely used HTML elements.
*/

#{$heading-selectors} {
  color: $color-headline;
  font-weight: 700;
  line-height: 1.45;
  margin-bottom: 0.9rem;
  margin-top: 0;
}

h1,
.h1 {
  font-size: 2.75rem;
  line-height: 1.25;
  margin-bottom: 1rem;
  padding-top: 2rem;
}

h2,
.h2 {
  font-size: 2.5rem;
  line-height: 1.25;
  padding-top: 1rem;
}

h3,
.h3 {
  font-size: 1.25rem;
  padding-top: 0.8rem;
}

h4,
.h4 {
  font-size: 1.125rem;
  padding-top: 0.5rem;
}

h5,
.h5 {
  font-size: 1rem;
  font-weight: 400;
  padding-top: 0.5rem;
}

h6,
.h6 {
  font-size: 0.9375rem;
  padding-top: 0.5rem;
}

a {
  color: $color-accent;

  @media (min-width: $breakpoint-tablet) {
    transition: color 0.2s ease-out;

    &:hover,
    &:focus {
      color: darken($color-accent, 10%);
    }
  }
}

dt {
  font-weight: 700;
}

p,
.paragraph,
ul,
ol,
dl,
dd,
table,
figure {
  margin: 0 0 1.2rem;
}

ul,
ol {
  padding-left: 1.5rem;

  ul,
  ol {
    margin-bottom: 0;
  }
}

hr {
  background-color: $color-border;
  border: 0;
  display: block;
  height: 1px;
  margin: 2.4rem 0;
}

img {
  display: block;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 0.875rem;
  margin-top: 0.625rem;
}

code {
  background: rgba(0, 0, 0, 0.05);
  padding: 0.1rem 0.3rem;
}

blockquote,
.blockquote {
  border-left: 4px solid $color-accent;
  font-size: 1.125rem;
  font-style: italic;
  font-weight: 400;
  letter-spacing: 0.16px;
  line-height: 1.55;
  margin: 2.4rem auto;
  max-width: 28rem;
  padding: 0.8rem 1.5rem;

  p:last-child {
    margin-bottom: 0;
  }
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  max-width: 100%;
}

td,
th {
  padding: 1.25rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    border-bottom: 2px solid $color-accent;
    color: $color-headline;
    padding-bottom: 10px;
    vertical-align: bottom;
    white-space: nowrap;
  }
}

tr:nth-child(even) {
  background-color: $color-background-light;
}

/**
* 3.1 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;
}

.button {
  appearance: none;
  background-color: $color-background;
  border: 1px solid $color-accent;
  border-radius: 4px;
  color: $color-accent;
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-size: 0.875rem;
  font-weight: 700;
  line-height: inherit;
  outline: 0;
  padding: 1.25rem 2.125rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: background-color 0.2s ease, border-color 0.2s ease,
    color 0.2s ease;
  user-select: none;

  &:disabled,
  &--disabled {
    cursor: default;
    opacity: 0.65;
    pointer-events: none;
  }

  @media (min-width: $breakpoint-tablet) {
    &:hover,
    &:focus {
      border-color: $color-background-dark;
      color: $color-background-dark;
    }
  }

  &--primary {
    background-color: $color-accent;
    border-color: $color-accent;
    color: $color-background;

    @media (min-width: $breakpoint-tablet) {
      &:hover,
      &:focus {
        background-color: $color-background-dark;
        color: $color-background;
      }
    }
  }

  &--secondary {
    background-color: $color-background-dark;
    border-color: $color-background-dark;
    color: $color-background;

    @media (min-width: $breakpoint-tablet) {
      &:hover,
      &:focus {
        background-color: $color-accent;
        border-color: $color-accent;
        color: $color-background;
      }
    }
  }

  &--block {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 400px;
    text-align: center;
    width: 100%;
  }

  &--link {
    background: none;
    border: 0;
    padding: 0;
    position: relative;
    text-transform: none;
    transition: color 0.2s ease-out;

    &:hover,
    &:focus {
      color: $color-background-dark;

      &::before {
        background: $color-background-dark;
      }

      &::after {
        background-position: right center;
      }
    }

    &::before {
      background: $color-accent;
      bottom: 0;
      content: '';
      height: 1px;
      left: 0;
      position: absolute;
      transition: background-color 0.2s ease-out;
      width: 100%;
    }

    &::after {
      $color-accent-rgb: red($color-accent), green($color-accent),
        blue($color-accent);
      $color-background-dark-rgb: red($color-background-dark),
        green($color-background-dark), blue($color-background-dark);

      background: url("data:image/svg+xml;charset=utf8,%3Csvg width='16' height='10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.586 5L.293 8.293a1 1 0 1 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4A1 1 0 1 0 .293 1.707L3.586 5z' fill='rgb(#{$color-accent-rgb})'/%3E%3Cpath d='M13.586 5l-3.293 3.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 1.414L13.586 5z' fill='rgb(#{$color-background-dark-rgb}'/%3E%3C/svg%3E")
        left center no-repeat;
      content: '';
      display: inline-block;
      height: 10px;
      margin-left: 10px;
      transition: background-position 0.2s ease-out;
      vertical-align: baseline;
      width: 6px;
    }
  }

  &--small {
    font-size: 0.8125rem;
    padding: 0.594rem 1.875rem;
  }
}

/**
* 3.2 Forms
*
* Global form elements, including structering wrapper elements.
*/

fieldset {
  border: 0;
  margin: 0 0 1.5rem;
  padding: 0;

  *:last-child {
    margin-bottom: 0;
  }

  input,
  select,
  textarea {
    margin: 0 0 1.875rem;
  }
}

legend {
  display: inline-block;
  font-size: 1.25rem;
  font-weight: 700;
  margin-bottom: 0.9375rem;
}

label {
  display: inline-block;
  font-weight: 700;
  line-height: 1.5;
  margin-bottom: 0.5rem;
}

[type='text'],
[type='email'],
[type='search'],
[type='password'],
textarea,
select {
  appearance: none;
  background-color: $color-background;
  border: 1px solid rgba(11, 16, 12, 1);
  border-radius: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  min-height: 50px;
}

input,
select,
textarea {
  margin: 0 0 1rem;
  padding: 10px 20px;
}

textarea {
  min-height: 150px;
  resize: vertical;
  width: 100%;
}

select {
  $color-text-rgb: red($color-contrast), green($color-contrast),
    blue($color-contrast);

  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='rgb(#{$color-text-rgb})' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 18px) center;
  background-repeat: no-repeat;
  background-size: 9px;
  padding-right: 45px;

  &::-ms-expand {
    display: none;
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 1px;

  &,
  &:hover,
  &:focus {
    border-color: $color-border;
    outline: 0;
  }

  + label {
    display: inline-block;
    padding-left: 1.875rem;
    position: relative;
    width: 100%;

    &::before {
      background: #fff;
      border: 1px solid $color-border;
      border-radius: 2px;
      content: '';
      display: block;
      height: 15px;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: 4px;
      transition: border-color 0.2s ease, background-color 0.2s ease;
      width: 15px;
    }
  }

  &:checked {
    + label::before {
      background-color: $color-accent;
      border-color: $color-accent;
      box-shadow: inset 0 0 0 2px #fff;
    }
  }
}

[type='radio'] {
  + label::before {
    border-radius: 50%;
  }
}

/**
* 3.3 Icons
*
* Global icon set styling.
*/

.feather {
  color: $color-accent;
  position: relative;
  top: -2px;
  vertical-align: middle;
}

/**
* 3.4 Custom list styles
*/

.iconList {
  list-style-type: none;
  padding: 0;

  li {
    margin-bottom: 0.75em;
    padding-left: 1.625em;
    position: relative;

    &::before {
      background-size: contain;
      content: '';
      display: block;
      height: 0.875em;
      left: 0;
      position: absolute;
      top: 0.375em;
      width: 0.875em;
    }
  }

  &--checkCircle {
    li::before {
      background-image: url('../assets/icons/check-circle.svg');
    }
  }
}

/**
* 3.4 Pills
*
* Pill-looking elements.
*/

.pill {
  background-color: $color-background-dark;
  border-radius: 2em;
  color: $color-background;
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  padding: 0.1rem 1rem;
  text-overflow: ellipsis;
  vertical-align: middle;
  white-space: nowrap;
}
